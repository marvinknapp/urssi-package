{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to MkDocs For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Home"},{"location":"#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"addlive/","text":"this needs content We should be able to reference functions here like Compute basic statistics of a numpy array. Parameters: data ( ndarray ) \u2013 Input numpy array containing numerical data. Raises: ValueError \u2013 If the input is not a numpy ndarray. Returns: dict ( dict ) \u2013 A dictionary containing mean, median, standard deviation, minimum, and maximum of the input data. Source code in src/urssi_package/example.py 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 def compute_statistics ( data : np . ndarray ) -> dict : \"\"\" Compute basic statistics of a numpy array. Args: data (np.ndarray): Input numpy array containing numerical data. Raises: ValueError: If the input is not a numpy ndarray. Returns: dict: A dictionary containing mean, median, standard deviation, minimum, and maximum of the input data. \"\"\" if not isinstance ( data , np . ndarray ): raise ValueError ( \"Input must be a numpy ndarray.\" ) stats = { 'mean' : np . mean ( data ), 'median' : np . median ( data ), 'std_dev' : np . std ( data ), 'min' : np . min ( data ), 'max' : np . max ( data ) } return stats And how does this render examples? Example function to demonstrate doctest usage and simple arithmetic. Test with python -m doctest src/urssi_package/example.py -v Note: You need to use \"Examples\" not \"Example\" in the docstring for mkdocs to render it nicely. Parameters: a ( int ) \u2013 First integer. b ( int ) \u2013 Second integer. Returns: int ( int ) \u2013 The sum of a and b, or 42 if both are zero. Examples: >>> example_doctest_usage ( 2 , 3 ) 5 >>> example_doctest_usage ( 0 , 0 ) 42 >>> example_doctest_usage ( - 1 , 1 ) 0 Source code in src/urssi_package/example.py 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 def example_doctest_usage ( a : int , b : int ) -> int : \"\"\" Example function to demonstrate doctest usage and simple arithmetic. Test with `python -m doctest src/urssi_package/example.py -v` Note: You need to use \"Examples\" **not** \"Example\" in the docstring for mkdocs to render it nicely. Args: a (int): First integer. b (int): Second integer. Returns: int: The sum of a and b, or 42 if both are zero. Examples: >>> example_doctest_usage(2, 3) 5 >>> example_doctest_usage(0, 0) 42 >>> example_doctest_usage(-1, 1) 0 \"\"\" if a == 0 and b == 0 : return 42 return a + b","title":"Reference Functions"},{"location":"addlive/#this-needs-content","text":"We should be able to reference functions here like Compute basic statistics of a numpy array. Parameters: data ( ndarray ) \u2013 Input numpy array containing numerical data. Raises: ValueError \u2013 If the input is not a numpy ndarray. Returns: dict ( dict ) \u2013 A dictionary containing mean, median, standard deviation, minimum, and maximum of the input data. Source code in src/urssi_package/example.py 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 def compute_statistics ( data : np . ndarray ) -> dict : \"\"\" Compute basic statistics of a numpy array. Args: data (np.ndarray): Input numpy array containing numerical data. Raises: ValueError: If the input is not a numpy ndarray. Returns: dict: A dictionary containing mean, median, standard deviation, minimum, and maximum of the input data. \"\"\" if not isinstance ( data , np . ndarray ): raise ValueError ( \"Input must be a numpy ndarray.\" ) stats = { 'mean' : np . mean ( data ), 'median' : np . median ( data ), 'std_dev' : np . std ( data ), 'min' : np . min ( data ), 'max' : np . max ( data ) } return stats And how does this render examples? Example function to demonstrate doctest usage and simple arithmetic. Test with python -m doctest src/urssi_package/example.py -v Note: You need to use \"Examples\" not \"Example\" in the docstring for mkdocs to render it nicely. Parameters: a ( int ) \u2013 First integer. b ( int ) \u2013 Second integer. Returns: int ( int ) \u2013 The sum of a and b, or 42 if both are zero. Examples: >>> example_doctest_usage ( 2 , 3 ) 5 >>> example_doctest_usage ( 0 , 0 ) 42 >>> example_doctest_usage ( - 1 , 1 ) 0 Source code in src/urssi_package/example.py 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 def example_doctest_usage ( a : int , b : int ) -> int : \"\"\" Example function to demonstrate doctest usage and simple arithmetic. Test with `python -m doctest src/urssi_package/example.py -v` Note: You need to use \"Examples\" **not** \"Example\" in the docstring for mkdocs to render it nicely. Args: a (int): First integer. b (int): Second integer. Returns: int: The sum of a and b, or 42 if both are zero. Examples: >>> example_doctest_usage(2, 3) 5 >>> example_doctest_usage(0, 0) 42 >>> example_doctest_usage(-1, 1) 0 \"\"\" if a == 0 and b == 0 : return 42 return a + b","title":"this needs content"},{"location":"examples/","text":"make some examples Does markdown work? Can this update live?","title":"Examples"},{"location":"examples/#make-some-examples","text":"Does markdown work? Can this update live?","title":"make some examples"}]}